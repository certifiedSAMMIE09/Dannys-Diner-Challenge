select * from dannys_diner.menu
select * from dannys_diner.members
select * from dannys_diner.sales


-- 1. What is the total amount each customer spent at the restaurant?
select product_id, sum(price)
from dannys_diner.menu
Join dannys_diner.sales
using(product_id)
group by product_id

-- 2. How many days has each customer visited the restaurant?
select customer_id, count(distinct order_date)
from dannys_diner.sales
Group by customer_id

-- 3. What was the first item from the menu purchased by each customer?
with cte as
(
select product_name, customer_id, order_date,
dense_rank() over (partition by customer_id order by order_date) first_purchased_item
from dannys_diner.sales
join dannys_diner.menu
using(product_id)
group by product_name, customer_id, order_date
)
select product_name, customer_id
from cte
where first_purchased_item=1


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
select product_name, count(product_id)
from dannys_diner.sales_table
join dannys_diner.menu_table
using(product_id)
Group by product_name
Order by count(product_id) desc
Limit 1



-- 5. Which item was the most popular for each customer?
with cte as 
(
select customer_id, product_name, count(product_id)cnt,
dense_rank() over (partition by customer_id order by count(product_id) desc) most_popular
from dannys_diner.sales
join dannys_diner.menu
using(product_id)
group by customer_id, product_id, product_name
)
select customer_id, product_name, cnt
from cte
where most_popular=1


-- 6. Which item was purchased first by the customer after they became a member?
with cte as
(
select customer_id, product_name, order_date,
dense_rank() over(partition by customer_id order by order_date) first_purchased
from dannys_diner.members
join dannys_diner.sales
using(customer_id)
join dannys_diner.menu
using(product_id)
where order_date>join_date
)
select customer_id, product_name
from cte
where first_purchased = 1


-- 7. Which item was purchased just before the customer became a member?
With CTE as
(
select customer_id, product_name, order_date,
dense_rank() over (partition by customer_id order by order_date desc)item_rank
from dannys_diner.members
Join dannys_diner.sales
using(customer_id)
Join dannys_diner.menu
using(product_id)
where order_date<join_date
)
select customer_id, product_name
from cte
where item_rank=1

-- 8. What is the total items and amount spent for each member before they became a member?
select st.customer_id, count(distinct mt.product_id), sum(mt.price)
from dannys_diner.sales st
Join dannys_diner.menu mt
on st.product_id=mt.product_id
Join dannys_diner.members dmt
on st.customer_id=dmt.customer_id
where st.order_date<dmt.join_date
Group by st.customer_id


-- 9.  If each $1 spent equates to 10 points and salad has a 2x points multiplier. How many points would each customer have?
select customer_id,
sum(case when product_id=1 then price*20 else price*10 end)total_points
from dannys_diner.sales
Join dannys_diner.menu
Using(product_id)
Group by customer_id
Order by customer_id

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi. How many points do customer A and B have at the end of January?
select * from dannys_diner.members
select * from dannys_diner.menu
select customer_id,
sum(case when order_date between join_date and join_date + interval'7day' then price*20 end)
from dannys_diner.members
join dannys_diner.sales
using(customer_id)
join dannys_diner.menu
using(product_id)
group by customer_id





